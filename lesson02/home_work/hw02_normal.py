# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

import math
print('Дан список, заполненный произвольными целыми числами. \
Получите целый список, элементами которого будут квадратные корни \
элементов исходного списка, но только если результаты извлечения корня \
не имеют десятичной части и если такой корень вообще можно извлечь')
arr = [int(i) for i in str(input('Введите целые числа через пробел, \
чтобы заполнить список: ')).split(' ')]
arr1 = [float(math.sqrt(i)) for i in arr if (i > 0) and (float.is_integer(math.sqrt(i)) == True)]
print('Сформированный список: ', arr1)
input('Нажмите ввод для продолжения')

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

print('Дана дата в формате dd.mm.yyyy, например: 02.11.2013. \
Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года. \
Склонением пренебречь (2000 года, 2010 года')
# Используем кортеж (уменьшение затрат памяти) и словарь (для разнообразия)
# В решении используется проверка на соответствие месяца <=12, даты <=31 с выводом значений об ошибочном вводе
tuple_day = ('первое', 'второе', 'третье', 'четвертое', 'пятое', 'шестое',
		 'седьмое', 'восьмое', 'девятое', 'десятое', 'одиннадцатое', 
		 'двенадцатое', 'тринадцатое', 'четырнадцатое', 'пятнадцатое', 
		 'шестнадцатое', 'семнадцатое', 'восемнадцатое', 'девятнадцатое', 
		 'двадцатое', 'двадцать первое', 'двадцать второе', 'двадцать третье', 
		 'двадцать четвертое', 'двадцать пятое', 'двадцать шестое',
		 'двадцать седьмое', 'двадцать восьмое', 'двадцать девятое', 
		 'тридцатое', 'тридцать первое')
dict_month = {'1': 'января', '2': 'февраля', '3': 'марта', '4': 'апреля',
		  '5': 'мая', '6': 'июня', '7': 'июля', '8': 'августа',
		  '9': 'сентября', '10': 'октября', '11': 'ноября', '12': 'декабря'}
date = input('Введите дату в формате: dd.mm.yyyy: ').split('.')
print('Введенная дата: {day} {month} {year} года'.format(day=tuple_day[int(date[0])-1] if int(date[0]) in range(1, 32) else 'WrongDay',\
                                                             month=dict_month[date[1]] if int(date[1]) in range(1, 13) else 'WrongMonth', year=date[2]))
input('Нажмите ввод для продолжение')

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random
print('Напишите алгоритм, заполняющий список произвольными целыми \
числами в диапазоне от -100 до 100. В списке должно быть n - элементов. \
Для получения случайного числа использовать функцию randint() модуля random')
elem = int(input('Введите количество элементов (целое положительное число): '))
arr = [random.randint(-100, 100) for i in range(1, elem+1)]
print('Результат генерации списка: ', arr)
input('Нажмите ввод для продолжения')

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

print('Дан список, заполненный произвольными целыми числами. Получите \
новый список, элементами которого будут:\n\
а) неповторяющиеся элементы исходного списка;\n\
б) элементы исходного списка, которые не имеют повторений.')
arr = [int(i) for i in str(input('Введите целые числа через пробел, \
чтобы заполнить список: ')).split(' ')]
arr1 = list(set(arr))
arr2 = [i for i in arr if arr.count(i) == 1]
print('Первоначальный список: {arr}\n\
Новый список, содержащий неповторяющиеся элементы исходного списка: {arr1}'.format(arr=arr, arr1=arr1))
input('Нажмите ввод для продолжения')
print('Первоначальный список: {arr}\n\
Новый список, состоящий из элементов исходного списка, которые не имеют повторений: {arr2}'.format(arr=arr, arr2=arr2))
input('Нажмите ввод для продолжения')
